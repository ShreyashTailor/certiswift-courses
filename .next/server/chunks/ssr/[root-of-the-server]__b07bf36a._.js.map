{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/course-page-shadcn/course-page-certiswift/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8QAAC;QACC,aAAU;QACV,WAAW,IAAA,kJAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8QAAC;QACC,aAAU;QACV,WAAW,IAAA,kJAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8QAAC;QACC,aAAU;QACV,WAAW,IAAA,kJAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8QAAC;QACC,aAAU;QACV,WAAW,IAAA,kJAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8QAAC;QACC,aAAU;QACV,WAAW,IAAA,kJAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8QAAC;QACC,aAAU;QACV,WAAW,IAAA,kJAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8QAAC;QACC,aAAU;QACV,WAAW,IAAA,kJAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/course-page-shadcn/course-page-certiswift/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,8QAAC,4MAAsB;QACrB,aAAU;QACV,WAAW,IAAA,kJAAE,EACX,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8QAAC,iNAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/course-page-shadcn/course-page-certiswift/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,IAAA,uMAAG,EACvB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,wMAAI,GAAG;IAE9B,qBACE,8QAAC;QACC,aAAU;QACV,WAAW,IAAA,kJAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/course-page-shadcn/course-page-certiswift/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n\r\n// Add validation\r\nif (!supabaseUrl || !supabaseKey) {\r\n  throw new Error('Missing Supabase environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey)\r\n\r\n// Test connection function\r\nexport const testConnection = async () => {\r\n  try {\r\n    console.log('üîç Testing Supabase connection...')\r\n    console.log('üìç URL:', supabaseUrl)\r\n    console.log('üîë Key (first 20 chars):', supabaseKey.substring(0, 20) + '...')\r\n    \r\n    const { data, error, status, statusText } = await supabase\r\n      .from('courses')\r\n      .select('count', { count: 'exact', head: true })\r\n    \r\n    console.log('üìä Response status:', status)\r\n    console.log('üìä Response statusText:', statusText)\r\n    \r\n    if (error) {\r\n      console.error('‚ùå Connection test failed:', error)\r\n      console.error('üî¥ Error code:', error.code)\r\n      console.error('üî¥ Error message:', error.message)\r\n      console.error('üî¥ Error details:', error.details)\r\n      console.error('üî¥ Error hint:', error.hint)\r\n      return false\r\n    }\r\n    console.log('‚úÖ Database connection successful, courses count:', data)\r\n    return true\r\n  } catch (error) {\r\n    console.error('üí• Connection test error:', error)\r\n    return false\r\n  }\r\n}\r\n\r\n// Database types\r\nexport interface Course {\r\n  id?: number\r\n  title: string\r\n  description: string\r\n  provider: string\r\n  instructor?: string\r\n  price?: number\r\n  type: 'FREE' | 'PAID'\r\n  image_url?: string\r\n  course_url?: string\r\n  created_at?: string\r\n  rating?: number\r\n  difficulty?: 'Beginner' | 'Intermediate' | 'Advanced'\r\n  duration?: string\r\n  category?: string\r\n}\r\n\r\nexport interface Admin {\r\n  id?: number\r\n  email: string\r\n  password: string\r\n  created_at?: string\r\n}\r\n\r\nexport interface CourseProgress {\r\n  id?: number\r\n  user_id: string\r\n  course_id: number\r\n  progress_percentage: number\r\n  completed: boolean\r\n  last_accessed?: string\r\n  created_at?: string\r\n}\r\n\r\nexport interface CourseRating {\r\n  id?: number\r\n  course_id: number\r\n  user_name: string\r\n  rating: number\r\n  review?: string\r\n  created_at?: string\r\n}\r\n\r\nexport interface UserFavorite {\r\n  id?: number\r\n  user_id: string\r\n  course_id: number\r\n  created_at?: string\r\n}\r\n\r\nexport interface Achievement {\r\n  id?: number\r\n  user_id: string\r\n  badge_type: string\r\n  badge_name: string\r\n  description: string\r\n  earned_at?: string\r\n}\r\n\r\n// Admin functions\r\nexport const authenticateAdmin = async (email: string, password: string): Promise<boolean> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('admins')\r\n      .select('*')\r\n      .eq('email', email)\r\n      .eq('password', password)\r\n      .single()\r\n\r\n    if (error) {\r\n      console.error('Auth error:', error)\r\n      return false\r\n    }\r\n\r\n    return !!data\r\n  } catch (error) {\r\n    console.error('Authentication failed:', error)\r\n    return false\r\n  }\r\n}\r\n\r\nexport const createAdmin = async (email: string, password: string): Promise<boolean> => {\r\n  try {\r\n    const { error } = await supabase\r\n      .from('admins')\r\n      .insert([{ email, password }])\r\n\r\n    if (error) {\r\n      console.error('Create admin error:', error)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  } catch (error) {\r\n    console.error('Failed to create admin:', error)\r\n    return false\r\n  }\r\n}\r\n\r\n// Course functions\r\nexport const getCourses = async (): Promise<Course[]> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('courses')\r\n      .select('*')\r\n      .order('created_at', { ascending: false })\r\n\r\n    if (error) {\r\n      console.error('Get courses error:', error)\r\n      return []\r\n    }\r\n\r\n    return data || []\r\n  } catch (error) {\r\n    console.error('Failed to get courses:', error)\r\n    return []\r\n  }\r\n}\r\n\r\nexport const addCourse = async (course: Omit<Course, 'id' | 'created_at'>): Promise<boolean> => {\r\n  try {\r\n    console.log('üöÄ Adding course:', course)\r\n    console.log('üìç Supabase URL:', supabaseUrl)\r\n    console.log('üîë Using API key:', supabaseKey ? 'Present ‚úÖ' : 'Missing ‚ùå')\r\n    \r\n    const { data, error, status, statusText } = await supabase\r\n      .from('courses')\r\n      .insert([course])\r\n      .select() // Return the inserted data\r\n\r\n    console.log('üìä Insert response status:', status)\r\n    console.log('üìä Insert response statusText:', statusText)\r\n\r\n    if (error) {\r\n      console.error('‚ùå Add course error:', error)\r\n      console.error('üî¥ Error code:', error.code)\r\n      console.error('üî¥ Error message:', error.message)\r\n      console.error('üî¥ Error details:', error.details)\r\n      console.error('üî¥ Error hint:', error.hint)\r\n      \r\n      // Additional debugging\r\n      if (error.code === 'PGRST116') {\r\n        console.error('üö® Table not found! Check if courses table exists')\r\n      }\r\n      if (error.code === '42501') {\r\n        console.error('üö® Permission denied! Check RLS policies')\r\n      }\r\n      \r\n      return false\r\n    }\r\n\r\n    console.log('‚úÖ Course added successfully:', data)\r\n    return true\r\n  } catch (error) {\r\n    console.error('üí• Failed to add course (catch block):', error)\r\n    return false\r\n  }\r\n}\r\n\r\nexport const updateCourse = async (id: number, course: Omit<Course, 'id' | 'created_at'>): Promise<boolean> => {\r\n  try {\r\n    console.log('üîÑ Updating course:', id, course)\r\n    \r\n    const { data, error, status, statusText } = await supabase\r\n      .from('courses')\r\n      .update(course)\r\n      .eq('id', id)\r\n      .select()\r\n\r\n    console.log('üìä Update response status:', status)\r\n    console.log('üìä Update response statusText:', statusText)\r\n\r\n    if (error) {\r\n      console.error('‚ùå Update course error:', error)\r\n      console.error('üî¥ Error code:', error.code)\r\n      console.error('üî¥ Error message:', error.message)\r\n      console.error('üî¥ Error details:', error.details)\r\n      console.error('üî¥ Error hint:', error.hint)\r\n      return false\r\n    }\r\n\r\n    console.log('‚úÖ Course updated successfully:', data)\r\n    return true\r\n  } catch (error) {\r\n    console.error('üí• Failed to update course (catch block):', error)\r\n    return false\r\n  }\r\n}\r\n\r\nexport const deleteCourse = async (id: number): Promise<boolean> => {\r\n  try {\r\n    const { error } = await supabase\r\n      .from('courses')\r\n      .delete()\r\n      .eq('id', id)\r\n\r\n    if (error) {\r\n      console.error('Delete course error:', error)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  } catch (error) {\r\n    console.error('Failed to delete course:', error)\r\n    return false\r\n  }\r\n}\r\n\r\n// üéØ NEW FEATURES START HERE\r\n\r\n// Course Progress Functions\r\nexport const updateCourseProgress = async (userId: string, courseId: number, progressPercentage: number): Promise<boolean> => {\r\n  try {\r\n    const { error } = await supabase\r\n      .from('course_progress')\r\n      .upsert({\r\n        user_id: userId,\r\n        course_id: courseId,\r\n        progress_percentage: progressPercentage,\r\n        completed: progressPercentage >= 100,\r\n        last_accessed: new Date().toISOString()\r\n      })\r\n\r\n    if (error) {\r\n      console.error('Update progress error:', error)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  } catch (error) {\r\n    console.error('Failed to update progress:', error)\r\n    return false\r\n  }\r\n}\r\n\r\nexport const getUserProgress = async (userId: string): Promise<CourseProgress[]> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('course_progress')\r\n      .select('*')\r\n      .eq('user_id', userId)\r\n\r\n    if (error) {\r\n      console.error('Get progress error:', error)\r\n      return []\r\n    }\r\n\r\n    return data || []\r\n  } catch (error) {\r\n    console.error('Failed to get progress:', error)\r\n    return []\r\n  }\r\n}\r\n\r\n// Course Rating Functions\r\nexport const addCourseRating = async (courseId: number, userName: string, rating: number, review?: string): Promise<boolean> => {\r\n  try {\r\n    const { error } = await supabase\r\n      .from('course_ratings')\r\n      .insert({\r\n        course_id: courseId,\r\n        user_name: userName,\r\n        rating,\r\n        review\r\n      })\r\n\r\n    if (error) {\r\n      console.error('Add rating error:', error)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  } catch (error) {\r\n    console.error('Failed to add rating:', error)\r\n    return false\r\n  }\r\n}\r\n\r\nexport const getCourseRatings = async (courseId: number): Promise<CourseRating[]> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('course_ratings')\r\n      .select('*')\r\n      .eq('course_id', courseId)\r\n      .order('created_at', { ascending: false })\r\n\r\n    if (error) {\r\n      console.error('Get ratings error:', error)\r\n      return []\r\n    }\r\n\r\n    return data || []\r\n  } catch (error) {\r\n    console.error('Failed to get ratings:', error)\r\n    return []\r\n  }\r\n}\r\n\r\n// Favorites Functions\r\nexport const toggleFavorite = async (userId: string, courseId: number): Promise<boolean> => {\r\n  try {\r\n    // Check if already favorited\r\n    const { data: existing } = await supabase\r\n      .from('user_favorites')\r\n      .select('id')\r\n      .eq('user_id', userId)\r\n      .eq('course_id', courseId)\r\n      .single()\r\n\r\n    if (existing) {\r\n      // Remove favorite\r\n      const { error } = await supabase\r\n        .from('user_favorites')\r\n        .delete()\r\n        .eq('user_id', userId)\r\n        .eq('course_id', courseId)\r\n\r\n      if (error) {\r\n        console.error('Remove favorite error:', error)\r\n        return false\r\n      }\r\n    } else {\r\n      // Add favorite\r\n      const { error } = await supabase\r\n        .from('user_favorites')\r\n        .insert({ user_id: userId, course_id: courseId })\r\n\r\n      if (error) {\r\n        console.error('Add favorite error:', error)\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  } catch (error) {\r\n    console.error('Failed to toggle favorite:', error)\r\n    return false\r\n  }\r\n}\r\n\r\nexport const getUserFavorites = async (userId: string): Promise<number[]> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('user_favorites')\r\n      .select('course_id')\r\n      .eq('user_id', userId)\r\n\r\n    if (error) {\r\n      console.error('Get favorites error:', error)\r\n      return []\r\n    }\r\n\r\n    return data?.map(item => item.course_id) || []\r\n  } catch (error) {\r\n    console.error('Failed to get favorites:', error)\r\n    return []\r\n  }\r\n}\r\n\r\n// Achievement Functions\r\nexport const awardAchievement = async (userId: string, badgeType: string, badgeName: string, description: string): Promise<boolean> => {\r\n  try {\r\n    const { error } = await supabase\r\n      .from('achievements')\r\n      .insert({\r\n        user_id: userId,\r\n        badge_type: badgeType,\r\n        badge_name: badgeName,\r\n        description\r\n      })\r\n\r\n    if (error) {\r\n      console.error('Award achievement error:', error)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  } catch (error) {\r\n    console.error('Failed to award achievement:', error)\r\n    return false\r\n  }\r\n}\r\n\r\nexport const getUserAchievements = async (userId: string): Promise<Achievement[]> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('achievements')\r\n      .select('*')\r\n      .eq('user_id', userId)\r\n      .order('earned_at', { ascending: false })\r\n\r\n    if (error) {\r\n      console.error('Get achievements error:', error)\r\n      return []\r\n    }\r\n\r\n    return data || []\r\n  } catch (error) {\r\n    console.error('Failed to get achievements:', error)\r\n    return []\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/course-page-shadcn/course-page-certiswift/components/learning-dashboard.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { \r\n  Trophy, \r\n  BookOpen, \r\n  Clock, \r\n  Star, \r\n  Target, \r\n  TrendingUp,\r\n  Award,\r\n  Calendar,\r\n  Heart,\r\n  Play\r\n} from \"lucide-react\"\r\nimport { Course, CourseProgress, Achievement, getUserProgress, getUserAchievements, getUserFavorites, getCourses } from \"@/lib/supabase\"\r\n\r\ninterface DashboardProps {\r\n  userId: string\r\n}\r\n\r\nexport default function LearningDashboard({ userId }: DashboardProps) {\r\n  const [progress, setProgress] = useState<CourseProgress[]>([])\r\n  const [achievements, setAchievements] = useState<Achievement[]>([])\r\n  const [favorites, setFavorites] = useState<number[]>([])\r\n  const [courses, setCourses] = useState<Course[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    loadDashboardData()\r\n  }, [userId])\r\n\r\n  const loadDashboardData = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const [progressData, achievementsData, favoritesData, coursesData] = await Promise.all([\r\n        getUserProgress(userId),\r\n        getUserAchievements(userId),\r\n        getUserFavorites(userId),\r\n        getCourses()\r\n      ])\r\n\r\n      setProgress(progressData)\r\n      setAchievements(achievementsData)\r\n      setFavorites(favoritesData)\r\n      setCourses(coursesData)\r\n    } catch (error) {\r\n      console.error('Failed to load dashboard data:', error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const completedCourses = progress.filter(p => p.completed).length\r\n  const inProgressCourses = progress.filter(p => !p.completed && p.progress_percentage > 0).length\r\n  const totalProgress = progress.length > 0 \r\n    ? Math.round(progress.reduce((sum, p) => sum + p.progress_percentage, 0) / progress.length)\r\n    : 0\r\n\r\n  const getCourseById = (id: number) => courses.find(c => c.id === id)\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\r\n          <p className=\"mt-4 text-muted-foreground\">Loading your learning dashboard...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8 space-y-8\">\r\n      {/* Header */}\r\n      <div className=\"text-center space-y-4\">\r\n        <h1 className=\"text-4xl font-bold bg-gradient-to-r from-primary to-primary/60 bg-clip-text text-transparent\">\r\n          Your Learning Journey\r\n        </h1>\r\n        <p className=\"text-muted-foreground max-w-2xl mx-auto\">\r\n          Track your progress, celebrate achievements, and continue growing your skills\r\n        </p>\r\n      </div>\r\n\r\n      {/* Stats Overview */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <Card className=\"relative overflow-hidden\">\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Completed Courses</CardTitle>\r\n            <Trophy className=\"h-4 w-4 text-primary\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold text-primary\">{completedCourses}</div>\r\n            <p className=\"text-xs text-muted-foreground\">Great progress! üéâ</p>\r\n          </CardContent>\r\n          <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-primary/20 to-primary\" />\r\n        </Card>\r\n\r\n        <Card className=\"relative overflow-hidden\">\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">In Progress</CardTitle>\r\n            <BookOpen className=\"h-4 w-4 text-blue-500\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold text-blue-500\">{inProgressCourses}</div>\r\n            <p className=\"text-xs text-muted-foreground\">Keep going! üí™</p>\r\n          </CardContent>\r\n          <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-blue-500/20 to-blue-500\" />\r\n        </Card>\r\n\r\n        <Card className=\"relative overflow-hidden\">\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Achievements</CardTitle>\r\n            <Award className=\"h-4 w-4 text-yellow-500\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold text-yellow-500\">{achievements.length}</div>\r\n            <p className=\"text-xs text-muted-foreground\">Badges earned! ‚≠ê</p>\r\n          </CardContent>\r\n          <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-yellow-500/20 to-yellow-500\" />\r\n        </Card>\r\n\r\n        <Card className=\"relative overflow-hidden\">\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Favorites</CardTitle>\r\n            <Heart className=\"h-4 w-4 text-red-500\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold text-red-500\">{favorites.length}</div>\r\n            <p className=\"text-xs text-muted-foreground\">Saved courses ‚ù§Ô∏è</p>\r\n          </CardContent>\r\n          <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-red-500/20 to-red-500\" />\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Overall Progress */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <TrendingUp className=\"w-5 h-5 text-primary\" />\r\n            Overall Learning Progress\r\n          </CardTitle>\r\n          <CardDescription>Your average completion across all courses</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm font-medium\">Total Progress</span>\r\n            <span className=\"text-sm font-bold text-primary\">{totalProgress}%</span>\r\n          </div>\r\n          <Progress value={totalProgress} className=\"h-3\" />\r\n          <p className=\"text-xs text-muted-foreground\">\r\n            You're doing amazing! Keep up the great work on your learning journey.\r\n          </p>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"grid lg:grid-cols-2 gap-8\">\r\n        {/* Current Progress */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <Play className=\"w-5 h-5 text-blue-500\" />\r\n              Current Progress\r\n            </CardTitle>\r\n            <CardDescription>Courses you're actively working on</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            {progress.length === 0 ? (\r\n              <div className=\"text-center py-8\">\r\n                <BookOpen className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n                <p className=\"text-muted-foreground\">No courses started yet</p>\r\n                <p className=\"text-sm text-muted-foreground\">Start your first course to see progress here!</p>\r\n              </div>\r\n            ) : (\r\n              progress.slice(0, 5).map((item) => {\r\n                const course = getCourseById(item.course_id)\r\n                if (!course) return null\r\n\r\n                return (\r\n                  <div key={item.id} className=\"space-y-2\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <p className=\"text-sm font-medium truncate\">{course.title}</p>\r\n                        <p className=\"text-xs text-muted-foreground\">{course.provider}</p>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {item.completed && (\r\n                          <Badge variant=\"secondary\" className=\"bg-green-100 text-green-700\">\r\n                            <Trophy className=\"w-3 h-3 mr-1\" />\r\n                            Complete\r\n                          </Badge>\r\n                        )}\r\n                        <span className=\"text-xs font-medium\">{item.progress_percentage}%</span>\r\n                      </div>\r\n                    </div>\r\n                    <Progress value={item.progress_percentage} className=\"h-2\" />\r\n                  </div>\r\n                )\r\n              })\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Achievements */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <Award className=\"w-5 h-5 text-yellow-500\" />\r\n              Recent Achievements\r\n            </CardTitle>\r\n            <CardDescription>Badges and milestones you've earned</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            {achievements.length === 0 ? (\r\n              <div className=\"text-center py-8\">\r\n                <Award className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n                <p className=\"text-muted-foreground\">No achievements yet</p>\r\n                <p className=\"text-sm text-muted-foreground\">Complete courses to earn your first badge!</p>\r\n              </div>\r\n            ) : (\r\n              achievements.slice(0, 5).map((achievement) => (\r\n                <div key={achievement.id} className=\"flex items-center gap-3 p-3 bg-gradient-to-r from-yellow-50 to-orange-50 rounded-lg border border-yellow-200\">\r\n                  <div className=\"w-10 h-10 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center\">\r\n                    <Award className=\"w-5 h-5 text-white\" />\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <p className=\"font-medium text-sm\">{achievement.badge_name}</p>\r\n                    <p className=\"text-xs text-muted-foreground\">{achievement.description}</p>\r\n                  </div>\r\n                  <div className=\"text-xs text-muted-foreground\">\r\n                    {achievement.earned_at ? new Date(achievement.earned_at).toLocaleDateString() : ''}\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Favorite Courses */}\r\n      {favorites.length > 0 && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <Heart className=\"w-5 h-5 text-red-500\" />\r\n              Your Favorite Courses\r\n            </CardTitle>\r\n            <CardDescription>Courses you've bookmarked for later</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {favorites.slice(0, 6).map((courseId) => {\r\n                const course = getCourseById(courseId)\r\n                if (!course) return null\r\n\r\n                return (\r\n                  <div key={courseId} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                    <div className=\"flex items-start justify-between mb-2\">\r\n                      <Badge variant={course.type === 'FREE' ? 'secondary' : 'default'} className=\"text-xs\">\r\n                        {course.type}\r\n                      </Badge>\r\n                      <Heart className=\"w-4 h-4 text-red-500 fill-current\" />\r\n                    </div>\r\n                    <h4 className=\"font-medium text-sm mb-1\">{course.title}</h4>\r\n                    <p className=\"text-xs text-muted-foreground mb-2\">{course.provider}</p>\r\n                    <p className=\"text-xs text-muted-foreground line-clamp-2\">{course.description}</p>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAnBA;;;;;;;;AAyBe,SAAS,kBAAkB,EAAE,MAAM,EAAkB;IAClE,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iPAAQ,EAAmB,EAAE;IAC7D,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iPAAQ,EAAgB,EAAE;IAClE,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iPAAQ,EAAW,EAAE;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iPAAQ,EAAW,EAAE;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iPAAQ,EAAC;IAEvC,IAAA,kPAAS,EAAC;QACR;IACF,GAAG;QAAC;KAAO;IAEX,MAAM,oBAAoB;QACxB,WAAW;QACX,IAAI;YACF,MAAM,CAAC,cAAc,kBAAkB,eAAe,YAAY,GAAG,MAAM,QAAQ,GAAG,CAAC;gBACrF,IAAA,kKAAe,EAAC;gBAChB,IAAA,sKAAmB,EAAC;gBACpB,IAAA,mKAAgB,EAAC;gBACjB,IAAA,6JAAU;aACX;YAED,YAAY;YACZ,gBAAgB;YAChB,aAAa;YACb,WAAW;QACb,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;QAClD,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,mBAAmB,SAAS,MAAM,CAAC,CAAA,IAAK,EAAE,SAAS,EAAE,MAAM;IACjE,MAAM,oBAAoB,SAAS,MAAM,CAAC,CAAA,IAAK,CAAC,EAAE,SAAS,IAAI,EAAE,mBAAmB,GAAG,GAAG,MAAM;IAChG,MAAM,gBAAgB,SAAS,MAAM,GAAG,IACpC,KAAK,KAAK,CAAC,SAAS,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,mBAAmB,EAAE,KAAK,SAAS,MAAM,IACxF;IAEJ,MAAM,gBAAgB,CAAC,KAAe,QAAQ,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;IAEjE,IAAI,SAAS;QACX,qBACE,8QAAC;YAAI,WAAU;sBACb,cAAA,8QAAC;gBAAI,WAAU;;kCACb,8QAAC;wBAAI,WAAU;;;;;;kCACf,8QAAC;wBAAE,WAAU;kCAA6B;;;;;;;;;;;;;;;;;IAIlD;IAEA,qBACE,8QAAC;QAAI,WAAU;;0BAEb,8QAAC;gBAAI,WAAU;;kCACb,8QAAC;wBAAG,WAAU;kCAA+F;;;;;;kCAG7G,8QAAC;wBAAE,WAAU;kCAA0C;;;;;;;;;;;;0BAMzD,8QAAC;gBAAI,WAAU;;kCACb,8QAAC,iKAAI;wBAAC,WAAU;;0CACd,8QAAC,uKAAU;gCAAC,WAAU;;kDACpB,8QAAC,sKAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,8QAAC,gPAAM;wCAAC,WAAU;;;;;;;;;;;;0CAEpB,8QAAC,wKAAW;;kDACV,8QAAC;wCAAI,WAAU;kDAAmC;;;;;;kDAClD,8QAAC;wCAAE,WAAU;kDAAgC;;;;;;;;;;;;0CAE/C,8QAAC;gCAAI,WAAU;;;;;;;;;;;;kCAGjB,8QAAC,iKAAI;wBAAC,WAAU;;0CACd,8QAAC,uKAAU;gCAAC,WAAU;;kDACpB,8QAAC,sKAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,8QAAC,0PAAQ;wCAAC,WAAU;;;;;;;;;;;;0CAEtB,8QAAC,wKAAW;;kDACV,8QAAC;wCAAI,WAAU;kDAAoC;;;;;;kDACnD,8QAAC;wCAAE,WAAU;kDAAgC;;;;;;;;;;;;0CAE/C,8QAAC;gCAAI,WAAU;;;;;;;;;;;;kCAGjB,8QAAC,iKAAI;wBAAC,WAAU;;0CACd,8QAAC,uKAAU;gCAAC,WAAU;;kDACpB,8QAAC,sKAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,8QAAC,6OAAK;wCAAC,WAAU;;;;;;;;;;;;0CAEnB,8QAAC,wKAAW;;kDACV,8QAAC;wCAAI,WAAU;kDAAsC,aAAa,MAAM;;;;;;kDACxE,8QAAC;wCAAE,WAAU;kDAAgC;;;;;;;;;;;;0CAE/C,8QAAC;gCAAI,WAAU;;;;;;;;;;;;kCAGjB,8QAAC,iKAAI;wBAAC,WAAU;;0CACd,8QAAC,uKAAU;gCAAC,WAAU;;kDACpB,8QAAC,sKAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,8QAAC,6OAAK;wCAAC,WAAU;;;;;;;;;;;;0CAEnB,8QAAC,wKAAW;;kDACV,8QAAC;wCAAI,WAAU;kDAAmC,UAAU,MAAM;;;;;;kDAClE,8QAAC;wCAAE,WAAU;kDAAgC;;;;;;;;;;;;0CAE/C,8QAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;0BAKnB,8QAAC,iKAAI;;kCACH,8QAAC,uKAAU;;0CACT,8QAAC,sKAAS;gCAAC,WAAU;;kDACnB,8QAAC,gQAAU;wCAAC,WAAU;;;;;;oCAAyB;;;;;;;0CAGjD,8QAAC,4KAAe;0CAAC;;;;;;;;;;;;kCAEnB,8QAAC,wKAAW;wBAAC,WAAU;;0CACrB,8QAAC;gCAAI,WAAU;;kDACb,8QAAC;wCAAK,WAAU;kDAAsB;;;;;;kDACtC,8QAAC;wCAAK,WAAU;;4CAAkC;4CAAc;;;;;;;;;;;;;0CAElE,8QAAC,yKAAQ;gCAAC,OAAO;gCAAe,WAAU;;;;;;0CAC1C,8QAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;;;;;;;;0BAMjD,8QAAC;gBAAI,WAAU;;kCAEb,8QAAC,iKAAI;;0CACH,8QAAC,uKAAU;;kDACT,8QAAC,sKAAS;wCAAC,WAAU;;0DACnB,8QAAC,0OAAI;gDAAC,WAAU;;;;;;4CAA0B;;;;;;;kDAG5C,8QAAC,4KAAe;kDAAC;;;;;;;;;;;;0CAEnB,8QAAC,wKAAW;gCAAC,WAAU;0CACpB,SAAS,MAAM,KAAK,kBACnB,8QAAC;oCAAI,WAAU;;sDACb,8QAAC,0PAAQ;4CAAC,WAAU;;;;;;sDACpB,8QAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,8QAAC;4CAAE,WAAU;sDAAgC;;;;;;;;;;;2CAG/C,SAAS,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;oCACxB,MAAM,SAAS,cAAc,KAAK,SAAS;oCAC3C,IAAI,CAAC,QAAQ,OAAO;oCAEpB,qBACE,8QAAC;wCAAkB,WAAU;;0DAC3B,8QAAC;gDAAI,WAAU;;kEACb,8QAAC;wDAAI,WAAU;;0EACb,8QAAC;gEAAE,WAAU;0EAAgC,OAAO,KAAK;;;;;;0EACzD,8QAAC;gEAAE,WAAU;0EAAiC,OAAO,QAAQ;;;;;;;;;;;;kEAE/D,8QAAC;wDAAI,WAAU;;4DACZ,KAAK,SAAS,kBACb,8QAAC,mKAAK;gEAAC,SAAQ;gEAAY,WAAU;;kFACnC,8QAAC,gPAAM;wEAAC,WAAU;;;;;;oEAAiB;;;;;;;0EAIvC,8QAAC;gEAAK,WAAU;;oEAAuB,KAAK,mBAAmB;oEAAC;;;;;;;;;;;;;;;;;;;0DAGpE,8QAAC,yKAAQ;gDAAC,OAAO,KAAK,mBAAmB;gDAAE,WAAU;;;;;;;uCAhB7C,KAAK,EAAE;;;;;gCAmBrB;;;;;;;;;;;;kCAMN,8QAAC,iKAAI;;0CACH,8QAAC,uKAAU;;kDACT,8QAAC,sKAAS;wCAAC,WAAU;;0DACnB,8QAAC,6OAAK;gDAAC,WAAU;;;;;;4CAA4B;;;;;;;kDAG/C,8QAAC,4KAAe;kDAAC;;;;;;;;;;;;0CAEnB,8QAAC,wKAAW;gCAAC,WAAU;0CACpB,aAAa,MAAM,KAAK,kBACvB,8QAAC;oCAAI,WAAU;;sDACb,8QAAC,6OAAK;4CAAC,WAAU;;;;;;sDACjB,8QAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,8QAAC;4CAAE,WAAU;sDAAgC;;;;;;;;;;;2CAG/C,aAAa,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,4BAC5B,8QAAC;wCAAyB,WAAU;;0DAClC,8QAAC;gDAAI,WAAU;0DACb,cAAA,8QAAC,6OAAK;oDAAC,WAAU;;;;;;;;;;;0DAEnB,8QAAC;gDAAI,WAAU;;kEACb,8QAAC;wDAAE,WAAU;kEAAuB,YAAY,UAAU;;;;;;kEAC1D,8QAAC;wDAAE,WAAU;kEAAiC,YAAY,WAAW;;;;;;;;;;;;0DAEvE,8QAAC;gDAAI,WAAU;0DACZ,YAAY,SAAS,GAAG,IAAI,KAAK,YAAY,SAAS,EAAE,kBAAkB,KAAK;;;;;;;uCAT1E,YAAY,EAAE;;;;;;;;;;;;;;;;;;;;;;YAmBjC,UAAU,MAAM,GAAG,mBAClB,8QAAC,iKAAI;;kCACH,8QAAC,uKAAU;;0CACT,8QAAC,sKAAS;gCAAC,WAAU;;kDACnB,8QAAC,6OAAK;wCAAC,WAAU;;;;;;oCAAyB;;;;;;;0CAG5C,8QAAC,4KAAe;0CAAC;;;;;;;;;;;;kCAEnB,8QAAC,wKAAW;kCACV,cAAA,8QAAC;4BAAI,WAAU;sCACZ,UAAU,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;gCAC1B,MAAM,SAAS,cAAc;gCAC7B,IAAI,CAAC,QAAQ,OAAO;gCAEpB,qBACE,8QAAC;oCAAmB,WAAU;;sDAC5B,8QAAC;4CAAI,WAAU;;8DACb,8QAAC,mKAAK;oDAAC,SAAS,OAAO,IAAI,KAAK,SAAS,cAAc;oDAAW,WAAU;8DACzE,OAAO,IAAI;;;;;;8DAEd,8QAAC,6OAAK;oDAAC,WAAU;;;;;;;;;;;;sDAEnB,8QAAC;4CAAG,WAAU;sDAA4B,OAAO,KAAK;;;;;;sDACtD,8QAAC;4CAAE,WAAU;sDAAsC,OAAO,QAAQ;;;;;;sDAClE,8QAAC;4CAAE,WAAU;sDAA8C,OAAO,WAAW;;;;;;;mCATrE;;;;;4BAYd;;;;;;;;;;;;;;;;;;;;;;;AAOd","debugId":null}},
    {"offset": {"line": 1467, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/course-page-shadcn/course-page-certiswift/app/dashboard/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport LearningDashboard from \"@/components/learning-dashboard\"\r\n\r\nexport default function DashboardPage() {\r\n  const [userId, setUserId] = useState<string>(\"\")\r\n\r\n  useEffect(() => {\r\n    // Get user ID from localStorage\r\n    const savedUserName = localStorage.getItem('userName')\r\n    if (savedUserName) {\r\n      setUserId(savedUserName)\r\n    }\r\n  }, [])\r\n\r\n  if (!userId) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-2xl font-bold mb-4\">Welcome to Your Dashboard</h1>\r\n          <p className=\"text-muted-foreground mb-4\">\r\n            Please start tracking progress on any course to see your learning dashboard.\r\n          </p>\r\n          <a href=\"/courses\" className=\"text-primary hover:underline\">\r\n            Browse Courses ‚Üí\r\n          </a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <LearningDashboard userId={userId} />\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iPAAQ,EAAS;IAE7C,IAAA,kPAAS,EAAC;QACR,gCAAgC;QAChC,MAAM,gBAAgB,aAAa,OAAO,CAAC;QAC3C,IAAI,eAAe;YACjB,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,IAAI,CAAC,QAAQ;QACX,qBACE,8QAAC;YAAI,WAAU;sBACb,cAAA,8QAAC;gBAAI,WAAU;;kCACb,8QAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,8QAAC;wBAAE,WAAU;kCAA6B;;;;;;kCAG1C,8QAAC;wBAAE,MAAK;wBAAW,WAAU;kCAA+B;;;;;;;;;;;;;;;;;IAMpE;IAEA,qBACE,8QAAC;QAAI,WAAU;kBACb,cAAA,8QAAC,+KAAiB;YAAC,QAAQ;;;;;;;;;;;AAGjC","debugId":null}}]
}